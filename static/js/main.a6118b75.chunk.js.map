{"version":3,"sources":["components/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTab","onTabSelected","className","map","tab","type","classNames","active","onClick","title","id","content","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iQAWaA,EAAwB,SAACC,GACpC,IAAQC,EAAqCD,EAArCC,KAAMC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,cAE3B,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,SACGH,EAAKI,KAAI,SAACC,GACT,OACE,oBAAiBF,UAAU,WAA3B,SACE,wBACEG,KAAK,SACLH,UACEI,IACE,WACA,CAAEC,OAAQH,IAAQJ,IAGtBQ,QAAS,WACHR,IAAgBI,GAClBH,EAAcG,IAVpB,SAcGA,EAAIK,SAfAL,EAAIM,SAqBnB,qBAAKR,UAAU,sCAAf,SACE,qBAEEA,UAAU,4BAFZ,SAOE,iCAASF,EAAYW,WANhBX,EAAYU,gBCxC3BX,G,MAAc,CAClB,CAAEW,GAAI,QAASD,MAAO,QAASE,QAAS,eACxC,CAAED,GAAI,QAASD,MAAO,QAASE,QAAS,eACxC,CAAED,GAAI,QAASD,MAAO,QAASE,QAAS,iBAoC3BC,E,4MA1BbC,MAAe,CACbb,YAAaD,EAAK,I,EAGpBE,cAAgB,SAACG,GACf,EAAKU,SAAS,CACZd,YAAaI,K,4CAIjB,WACE,IAAQJ,EAAgBe,KAAKF,MAArBb,YAER,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,mCAAgDF,EAAYS,SAC5D,cAAC,EAAD,CACET,YAAaA,EACbD,KAAMA,EACNE,cAAec,KAAKd,uB,GApBZe,IAAMC,WCbxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a6118b75.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './tabs.scss';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTab: Tab;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const { tabs, selectedTab, onTabSelected } = props;\n\n  return (\n    <div className=\"tabs\">\n      <div className=\"tabs__container\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <ul className=\"nav nav-tabs\">\n              {tabs.map((tab: Tab) => {\n                return (\n                  <li key={tab.id} className=\"nav-item\">\n                    <button\n                      type=\"button\"\n                      className={\n                        classNames(\n                          'nav-link',\n                          { active: tab === selectedTab },\n                        )\n                      }\n                      onClick={() => {\n                        if (selectedTab !== tab) {\n                          onTabSelected(tab);\n                        }\n                      }}\n                    >\n                      {tab.title}\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            <div className=\"tab-content tabs__content-container\">\n              <div\n                key={selectedTab.id}\n                className=\"tab-pane\n                fade\n                active\n                show\"\n              >\n                <strong>{selectedTab.content}</strong>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Tabs } from './components';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype Props = {};\n\ntype State = {\n  selectedTab: Tab;\n};\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedTab: tabs[0],\n  };\n\n  onTabSelected = (tab: Tab) => {\n    this.setState({\n      selectedTab: tab,\n    });\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"text-center\">{`Selected tab is ${selectedTab.title}`}</h1>\n        <Tabs\n          selectedTab={selectedTab}\n          tabs={tabs}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}